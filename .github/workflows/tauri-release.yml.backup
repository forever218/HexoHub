name: Build and Release Tauri Desktop

# 🎯 触发条件：只在推送版本标签时触发
on:
  push:
    tags:
      - 'v*.*.*'           # 匹配 v2.7.0, v3.0.0 等正式版本
      - 'v*.*.*-beta.*'    # 匹配 v2.7.0-beta.1 等测试版本
      - 'v*.*.*-alpha.*'   # 匹配 v2.7.0-alpha.1 等内测版本

  # 🛠️ 可选：手动触发（用于测试工作流）
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: v2.7.0)'
        required: true
        type: string

# 确保同一时间只运行一个构建任务
concurrency:
  group: tauri-release-${{ github.ref }}
  cancel-in-progress: true

# 权限声明：允许创建 Release 和上传文件
permissions:
  contents: write  # 允许创建 Release 和上传资产

jobs:
  # ========================
  # Windows 构建
  # ========================
  build-windows:
    name: Build Windows (Tauri)
    runs-on: windows-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 设置 Rust 工具链
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: 配置 Rust 缓存
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri -> target

      - name: 安装依赖
        run: npm ci

      - name: 构建前端
        run: npm run build

      - name: 构建 Tauri 应用 (Windows)
        run: npm run tauri:build
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      - name: 上传 Windows 构建产物
        uses: actions/upload-artifact@v4
        with:
          name: windows-tauri-build
          path: |
            src-tauri/target/release/bundle/nsis/*.exe
            src-tauri/target/release/bundle/msi/*.msi

      - name: 发布到 GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          files: |
            src-tauri/target/release/bundle/nsis/*.exe
            src-tauri/target/release/bundle/msi/*.msi
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ========================
  # macOS 构建
  # ========================
  build-macos:
    name: Build macOS (Tauri)
    runs-on: macos-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 设置 Rust 工具链
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: 配置 Rust 缓存
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri -> target

      - name: 安装依赖
        run: npm ci

      - name: 构建前端
        run: npm run build

      - name: 构建 Tauri 应用 (macOS)
        run: npm run tauri:build
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      - name: 上传 macOS 构建产物
        uses: actions/upload-artifact@v4
        with:
          name: macos-tauri-build
          path: |
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/macos/*.app

      - name: 发布到 GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          files: |
            src-tauri/target/release/bundle/dmg/*.dmg
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ========================
  # Linux 构建
  # ========================
  build-linux:
    name: Build Linux (Tauri)
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 设置 Rust 工具链
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: 配置 Rust 缓存
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri -> target

      - name: 安装系统依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev

      - name: 安装依赖
        run: npm ci

      - name: 构建前端
        run: npm run build

      - name: 构建 Tauri 应用 (Linux)
        run: npm run tauri:build
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      - name: 上传 Linux 构建产物
        uses: actions/upload-artifact@v4
        with:
          name: linux-tauri-build
          path: |
            src-tauri/target/release/bundle/appimage/*.AppImage
            src-tauri/target/release/bundle/deb/*.deb

      - name: 发布到 GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          files: |
            src-tauri/target/release/bundle/appimage/*.AppImage
            src-tauri/target/release/bundle/deb/*.deb
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
